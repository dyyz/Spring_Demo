<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

<!-- 
    bean配置的继承：使用bean的parent属性指定继承哪个bean的配置
	抽象bean： bean的abstrac属性为true的bean，不能被IOC容器实例化，只能用来继承配置，
	若某一个bean的class属性没有指定，则该bean必须是一个抽象bean，必须标明abstract="true"
-->
	<bean id="car1" class="com.spring.demo.xml.entity.Car" p:carName="parentCar" p:id="1" />
	<bean id="car2" class="com.spring.demo.xml.entity.Car" p:id="2" parent="car1" />
	
	<bean id="car3" p:id="3" p:carName="AbstractCar3" abstract="true"/>
	<bean id="car4" class="com.spring.demo.xml.entity.Car" p:id="4" parent="car3" />
	
	<bean id="car5" p:id="5" p:carName="NoClassCar5" abstract="true"/>
	
	<!-- car6继承car4，car4继承car3 -->
	<bean id="car6" p:carName="SonOfSonCar" parent="car4"/>

	<bean id="address" class="com.spring.demo.xml.entity.Address" p:location="dependsOnAddress"/>
	<bean id="card1" class="com.spring.demo.xml.entity.Card" p:cardName="firstCard"/>
	<bean id="card2" class="com.spring.demo.xml.entity.Card" p:cardName="SecondCard"/>
	<!--  person依赖于address  -->
	<bean id="person" class="com.spring.demo.xml.entity.Person" p:userName="Jerry" p:car-ref="car6" depends-on="address" />
	<bean id="person2" class="com.spring.demo.xml.entity.Person" p:userName="Tomy" p:car-ref="car6" depends-on="address card1,card2" />
</beans>
